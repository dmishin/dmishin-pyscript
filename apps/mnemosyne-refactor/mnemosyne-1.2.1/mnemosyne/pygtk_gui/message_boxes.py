
##############################################################################
#
# Message boxes for warnings and errors. <Peter.Bienstman@UGent.be>
#
##############################################################################
from gtk_import import *
from gtk_msg_box import ShowMsgBox
import sys, os
from mnemosyne.core.exceptions import *



##############################################################################
#
# Display extra errors generated by the library.
#
#  We don't provide these strings in libmnemosyne because they need to be
#  exposed to Qt's internationalisation mechanism.
#
##############################################################################

def messagebox_errors( translator, e):

    # Kludgy...
    
    if isinstance(e, ConfigError):
        msg = translator.trUtf8("Error in config.py:")
    elif isinstance(e, PluginError):
        msg = translator.trUtf8("Error when running plugin:")
    elif isinstance(e, LoadError):
        msg = translator.trUtf8("Unable to load file.")       
    elif isinstance(e, InvalidFormatError):
        msg = translator.trUtf8("Invalid file format.")
    elif isinstance(e, SaveError):
        msg = translator.trUtf8("Unable to save file.")   
    elif isinstance(e, XMLError):
        msg = translator.trUtf8("Unable to parse XML:")
    elif isinstance(e, EncodingError):
        msg = translator.trUtf8("Unrecognised encoding.")
    elif isinstance(e, MissingAnswerError):
        msg = translator.trUtf8("Missing answer on line:")
    elif isinstance(e, LoadErrorCreateTmp):               
        msg = translator.trUtf8("Unable to load database.\nCreating tmp file.")
         
    if e.info:
        msg += str(e.info)
                                   
    return ShowMsgBox( None, "Error", msg )

##############################################################################
#
# queryOverwriteFile
#
##############################################################################

def queryOverwriteFile(self, fileName):
    status = ShowMsgBox( None, "Mnemosyne", "File exists: %s"%filename,
                         ("_Overwrite", 1, "Cancel", -1))
    return status == 1


